// Prisma Schema File
// Learn more: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // SQLite (Change si tu utilises Postgres ou MySQL)
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique // Un utilisateur doit avoir un username unique
  firstName String?
  lastName  String?
  password  String
  isAdmin   Boolean  @default(false)
  orders    Orders[] // Correction du nom en minuscule (meilleure convention)
}

model Orders {
  id          Int          @id @default(autoincrement())
  userId      Int
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt // Permet de savoir quand une commande a été mise à jour
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  amountPayed Float
  state       String       @default("PENDING")
  items       OrderItems[]
}

model Items {
  id        Int          @id @default(autoincrement())
  name      String
  price     Float
  orderItem OrderItems[]
}

model OrderItems {
  orderId Int
  itemId  Int
  amount  Int
  order   Orders @relation(fields: [orderId], references: [id], onDelete: Cascade)
  item    Items  @relation(fields: [itemId], references: [id], onDelete: Cascade)

  @@id([orderId, itemId]) // Clé primaire composite
}
